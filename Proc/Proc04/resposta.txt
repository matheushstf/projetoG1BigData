Procedure 04

OBS: Adicionei um parâmetro a mais na procedure para saber o numero da reserva cadastrada por último.

CREATE OR REPLACE PROCEDURE CRIAR_RESERVA(IN IN_COD_ESPETACULO INTEGER, IN IN_COD_SESSAO INTEGER, 
										  IN IN_COD_PEDIDO INTEGER, IN IN_CADEIRA VARCHAR(10), 
										  INOUT OUT_CODIGO_RESERVA INTEGER)
	AS $$
	DECLARE 
		C_ESPETACULO INTEGER;
		C_SESSAO INTEGER;
		C_PEDIDO INTEGER;
	BEGIN
		/* Buscando o código do espetáculo para verificar se o mesmo existe. */
		SELECT E.COD_ESPETACULO FROM ESPETACULO AS E
		WHERE E.COD_ESPETACULO = IN_COD_ESPETACULO INTO C_ESPETACULO;
	
		/* Buscando o código da sessão para validar se a mesma existe. */
		SELECT S.COD_SESSAO FROM SESSAO AS S
		WHERE S.COD_SESSAO = IN_COD_SESSAO INTO C_SESSAO; 
	
		/* Buscando o código do pedido para validar se o mesmo existe. */
		SELECT P.COD_PEDIDO FROM PEDIDO AS P
		WHERE P.COD_PEDIDO = IN_COD_PEDIDO INTO C_PEDIDO;
		
		/* Testando das condicionais para validar se as variáveis não estão vazias. */
		IF ((C_ESPETACULO IS NULL) OR (C_SESSAO IS NULL)) THEN
			RAISE EXCEPTION 'NÃO FOI ENCONTRADA A SESSÃO OU ESPETÁCULO CORRESPONDENTE AO QUE FOI PASSADO';
		ELSE
			IF (C_PEDIDO IS NULL) THEN
				RAISE EXCEPTION 'NÃO FOI ENCONTRADO O PEDIDO DENTRO DO BANCO DE DADOS.';
			ELSE
				INSERT INTO RESERVA(COD_PEDIDO, COD_ESPETACULO, COD_SESSAO, CADEIRA)
				VALUES (IN_COD_PEDIDO, IN_COD_ESPETACULO, IN_COD_SESSAO, IN_CADEIRA) RETURNING COD_RESERVA INTO OUT_CODIGO_RESERVA;
			END IF;
		END IF;
	END; $$ 
LANGUAGE PLPGSQL;

DO $$
DECLARE
	C_RESERVA INTEGER;
BEGIN
	CALL CRIAR_RESERVA(1, 3, 5, 'S 24', C_RESERVA);
	RAISE NOTICE 'RESERVA Nº=% CADASTRADA COM SUCESSO', C_RESERVA;
END;
$$